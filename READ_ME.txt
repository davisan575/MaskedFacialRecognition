################################################################
#####################      READ ME       #######################
################################################################
Alison Davis & Ricardo Alonzo Ugalde
Specializing Eigenfaces for FR in COVID-19 Facial PPE
################################################################

The eigenfaces code base originated from the Eigenfaces section in: https://docs.opencv.org/3.4/da/d60/tutorial_face_main.html
This code originally ran with one test sample but was modified to accept both a CSV file for the training batch of images
as well as a CSV file for the test batch of images. By being able to do a batch run following a different training case
it became a lot easier to perform a larger analysis of the alogrithm for Experiments A, B, and C.

Points in code to edit for running:

mustRecognizeFace.cpp
Line 47: set boolean for whether or not masked facial recognition is being performed
Line 69: Set the filename for the training data CSV (was originally an argument but Visual Studio was deemed too annoying)
Line 110: Set the filename for the test data CSV (originally did not exist)
Line 335: Set the output file path for the results file

The output files from running each of the experiments are given in ExperimentalData folder. In this file the first column is the 
actual corresponding person # for the images in the Archive folder. The second number is the predicted (closest distance using eigenface
method) and the third column is the confidence which is just the "distance." This euclidian distance can have a threshold placed on it
which is what we do in the evaluation code (homemade_evaluator.cpp explained below).

This code requires CSV files that are set up in the hierarchy detailed in the opencv docs website listed above.
However, in order to achieve this code the create_special_csv.py script was run. It takes the base path of the
files. This particular instance was edited for the Archive folder also given. This was our final test data. The
file structure was a little different from the one used online so there were some edits to this script. Furthermore,
there is a special limit that can be set because 10,000 images takes a reallyyyyy long time to train eigenfaces on
therefore a max of 1,000 was used so that it was easier to run multiple tests.

The CSV files are given in the CSV_Files folder. These files are for a local computer but it can help to see how they were constructed
to create your own.

Finally, the code used for evaluating the outputs of mustRecognizeFace.cpp is given as homemade_evaluator.cpp. 
This handmade C++ code along with its companion DataPoint.cpp are specialized for taking the text files generated by 
mustRecognizeFace.cpp. This filename needs to be inserted at line 19 and a threshold distance needs to be set at line
37. If the beginning value of the false data changes (it was 500 for all of our experiments) then line 36 should also be 
edited. This script was then output to a file such as ./executableName > filename. 

These output files are stored in the Evaluation folder for each of the experiments. The excel document processing and sumamrizing
this data is also in the Evaluation folder. In these evaluations the first two columns show actual, predicted and then after
the arrow tells these as binary (first 500 are 1 because true value should be recognized, second 500 are 0 because they should not 
be recognized. Then the second value tells whether or not this prediction was made correctly).

Finally the final version of the data can be found in the Archive folder. 

:) Happy recognizing...

